{"version":3,"sources":["utils/storage.ts","utils/blacklist.ts","crypto/bytes.ts","crypto/hash.ts","crypto/hmac.ts","crypto/pbkdf2.ts","crypto/prng.ts","crypto/index.ts","components/Password/index.tsx","components/TextInput/index.tsx","components/Options/index.tsx","components/Output/index.tsx","modals/PasswordOutput/index.tsx","pages/Generator/index.tsx"],"names":["navigator","storage","persisted","then","_ref","Object","_home_marcoonroad_Documents_GitProjects_marcoonroad_WorkInProgress_fountain_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_marcoonroad_Documents_GitProjects_marcoonroad_WorkInProgress_fountain_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","persist","stop","_x","apply","this","arguments","PREFIX","localStorage","__webpack_exports__","get","key","result","getItem","JSON","parse","set","value","undefined","removeItem","setItem","stringify","_storage__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","KEY","init","Storage","add","hashImage","blacklist","syncIn","hashImagesInput","hashImages","replace","split","index","length","syncOut","keys","join","Bytes","toString","bytes","bytesArray","Uint8Array","String","fromCharCode","fromString","text","chars","push","charCodeAt","digest","hashType","data","window","crypto","subtle","importKey","asyncToGenerator","regenerator_default","secret","name","hash","abrupt","sent","_x2","hmac","_ref2","_callee2","message","payload","signature","_context2","sign","_x3","_x4","_x5","CYCLES","getKeyMaterial","password","digestOutput","passwordHash","computeSalt","salt","image","substr","getDerivedBits","_callee4","keyMaterial","bits","_context4","t0","t1","t2","t3","iterations","t4","deriveBits","call","randomBytes","buffer","getRandomValues","num2hex","num","slice","asHex","array","forEach","concat","map","CHARS","DIGIT","LOWER","UPPER","SPECIAL","Public","pbkdf2","_ref3","_callee3","_context3","_x6","asBase64","byte","btoa","asPassword","options","Math","max","min","digit","upper","lower","special","randomId","DefaultButton","styled","button","_templateObject","DefaultInput","input","_templateObject2","Label","label","_templateObject3","Button","_templateObject4","Input","_templateObject5","Div","div","_templateObject6","Password","initialPassword","_React$useState","React","useState","visible","_React$useState2","slicedToArray","currentPassword","setPassword","passwordInput","customRef","hideImage","react_default","createElement","className","showImage","id","labelId","buttonText","inputType","placeholder","useEffect","timeout","setTimeout","_objectSpread","clearTimeout","htmlFor","type","ref","onMouseEnter","onChange","event","target","autoComplete","readOnly","onFocus","current","onBlur","onClick","preventDefault","focus","TextInput_templateObject","TextInput_templateObject2","TextInput_templateObject3","TextInput_templateObject4","TextInput_templateObject5","TextInput_templateObject6","exists","TextInput","props","clean","state","setState","TextInput_Label","TextInput_Div","TextInput_Input","TextInput_objectSpread","autoCorrect","autoCapitalize","TextInput_Button","disabled","DefaultLabel","Options_templateObject","Options_templateObject2","Options_templateObject3","Options_templateObject4","Options_templateObject5","Options_templateObject6","asKey","toLowerCase","asOption","PublicOptions","values","optionsId","listId","update","Options_Label","Options_Div","Options_Input","list","Options_objectSpread","Options_Button","_templateObject7","Output_templateObject","DefaultOutput","Output_templateObject2","Output_templateObject3","Output_templateObject4","StyledOutput","Output_templateObject5","PublicOutput","Output_Label","Output_Button","clipboard","writeText","Output_templateObject6","memo","PasswordOutput_templateObject","PasswordOutput_templateObject2","CloseButton","PasswordOutput_templateObject3","PasswordOutput_templateObject4","PasswordOutput","PasswordOutput_Div","components_Output","outputId","PasswordOutput_Button","refreshPassword","swal","close","Generator_templateObject","Generator_templateObject2","servicesList","Form","form","Generator_templateObject3","MainPage","username","derivedKey","saltAndData","nonce","masterPasswordRef","useRef","masterUsernameRef","serviceRef","computePass","Crypto","computePairs","initialNonce","hexHashImage","newPassword","_args","Blacklist","console","log","Generator_objectSpread","generatePassword","user","pass","service","_yield$computePairs","alert","content","modals_PasswordOutput","buttons","components_TextInput","components_Password","components_Options","Generator_Button"],"mappings":"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","file":"static/js/6.c76cd7ee.chunk.js","sourcesContent":["navigator.storage.persisted().then(async persisted => {\n  if (!persisted) {\n    await navigator.storage.persist();\n  }\n});\n\nconst PREFIX = 'rhizome-pass-';\nconst storage = localStorage;\n\nconst set = (key: string, value: any) => {\n  if (value === null || value === undefined) {\n    storage.removeItem(PREFIX + key);\n  } else {\n    storage.setItem(PREFIX + key, JSON.stringify(value));\n  }\n};\n\nconst get = (key: string) => {\n  const result = storage.getItem(PREFIX + key);\n\n  if (typeof result === 'string') {\n    return JSON.parse(result);\n  }\n\n  return null;\n};\n\nexport default {get, set};\n","import Storage from './storage'\n\nconst KEY = 'hash-blacklist'\n\n// === initialization =====================================\nconst init = () => {\n  const blacklist = Storage.get(KEY)\n\n  if (!blacklist) {\n    Storage.set(KEY, {})\n  }\n}\n\ninit()\n// ========================================================\n\n/*\nconst validate = (hashImage : string) => {\n  // TODO: implement validation for import\n}\n*/\n\nconst add = (hashImage : string) => {\n  init()\n  const blacklist = Storage.get(KEY)\n\n  blacklist[ hashImage ] = true\n\n  Storage.set(KEY, blacklist)\n}\n\nconst get = () => {\n  init()\n  return Storage.get(KEY)\n}\n\nconst syncIn = (hashImagesInput : string) => {\n  init()\n  const hashImages = hashImagesInput.replace(/(\\r|\\n|\\t|\\s)/g, ' ').replace(/\\s\\s+/g, ' ').split(' ')\n  const blacklist = Storage.get(KEY)\n\n  for (let index = 0; index < hashImages.length; index += 1) {\n    const hashImage = hashImages[ index ]\n    blacklist[ hashImage ] = true\n  }\n\n  Storage.set(KEY, blacklist)\n}\n\nconst syncOut = () => {\n  init()\n  const blacklist = Storage.get(KEY)\n  const hashImages = Object.keys(blacklist)\n\n  return hashImages.join(\"\\n\")\n}\n\nexport default { add, get, syncIn, syncOut }\n","const fromString = function(text: string) {\n  const chars = [];\n  for (let index = 0; index < text.length; index += 1) {\n    chars.push(text.charCodeAt(index));\n  }\n  return new Uint8Array(chars);\n};\n\nconst toString = function(bytes: ArrayBuffer | Uint8Array | any[]) {\n  const bytesArray = new Uint8Array(bytes as any) as any;\n  return String.fromCharCode.apply(null, bytesArray);\n};\n\nconst Bytes = {toString, fromString};\n\nexport default Bytes;\n","import Bytes from './bytes'\n\ntype HashType = 'SHA-256' | 'SHA-512'\n\nfunction digest(hashType : HashType, data : string) {\n  return window.crypto.subtle.digest(hashType, Bytes.fromString(data))\n}\n\nexport default digest","import Bytes from './bytes'\n\ntype HashType = 'SHA-256' | 'SHA-512'\n\nconst importKey = async function (hashType : HashType, secret : string) {\n  const bytes = Bytes.fromString(secret)\n  return await window.crypto.subtle.importKey(\n    'raw',\n    bytes,\n    { name: 'HMAC', hash: { name: hashType } },\n    false,\n    ['sign']\n  )\n}\n\nconst hmac = async function (hashType : HashType, secret : string, message : string) {\n  const payload = Bytes.fromString(message)\n  const key = await importKey(hashType, secret)\n  const signature = await window.crypto.subtle.sign('HMAC', key, payload)\n  return Bytes.toString(new Uint8Array(signature))\n}\n\nexport default hmac","import Bytes from './bytes';\nimport digest from './hash';\n\nconst CYCLES = 1000; // 10000000\n\nconst getKeyMaterial = async function(password: string) {\n  const digestOutput = await digest('SHA-512', password);\n  const passwordHash = Bytes.toString(new Uint8Array(digestOutput));\n\n  return window.crypto.subtle.importKey(\n    'raw',\n    Bytes.fromString(passwordHash),\n    'PBKDF2',\n    false,\n    ['deriveBits', 'deriveKey']\n  );\n};\n\nconst computeSalt = async function(salt: string) {\n  const image = await digest('SHA-256', salt);\n  const text = Bytes.toString(new Uint8Array(image));\n  return Bytes.fromString(text.substr(0, 16));\n};\n\nasync function getDerivedBits(password: string, salt: string) {\n  const keyMaterial = await getKeyMaterial(password);\n  const bits = await window.crypto.subtle.deriveBits(\n    {\n      name: 'PBKDF2',\n      salt: await computeSalt(salt),\n      iterations: CYCLES,\n      hash: 'SHA-512',\n    },\n    keyMaterial,\n    512\n  );\n  return new Uint8Array(bits);\n}\n\nconst pbkdf2 = async function(password: string, salt: string) {\n  const bytes = await getDerivedBits(password, salt);\n  return Bytes.toString(bytes);\n};\n\nexport default pbkdf2;\n","import Bytes from './bytes'\n\nconst randomBytes = function (bytes : number) {\n  const buffer = window.crypto.getRandomValues(new Uint8Array(bytes))\n  return Bytes.toString(buffer)\n}\n\nexport default randomBytes","import Bytes from './bytes';\nimport digest from './hash';\nimport hmac from './hmac';\nimport pbkdf2 from './pbkdf2';\nimport randomBytes from './prng';\n\nconst num2hex = function(num: number) {\n  return ('00' + num.toString(16)).slice(-2);\n};\n\nconst asHex = function(payload: string) {\n  const array: number[] = [];\n\n  Bytes.fromString(payload).forEach(function(value) {\n    array.push(value);\n  });\n\n  return [...array].map(num2hex).join('');\n};\n\nconst asBase64 = function(payload: string) {\n  const bytes = Bytes.fromString(payload);\n  const array: number[] = [];\n  bytes.forEach(function(byte) {\n    array.push(byte);\n  });\n  return btoa(String.fromCharCode.apply(null, array));\n};\n\ninterface IPasswordOptions {\n  length: number | null | undefined;\n  digit: boolean | null | undefined;\n  upper: boolean | null | undefined;\n  lower: boolean | null | undefined;\n  special: boolean | null | undefined;\n}\n\nconst CHARS = {\n  DIGIT: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n  LOWER: [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ],\n  UPPER: [\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n  ],\n  SPECIAL: [\n    '!',\n    '@',\n    '#',\n    '$',\n    '%',\n    '&',\n    '*',\n    '(',\n    ')',\n    '-',\n    '_',\n    '+',\n    '=',\n    '{',\n    '}',\n    '[',\n    ']',\n    '<',\n    '>',\n    '^',\n    '~',\n    ':',\n    ',',\n    '.',\n    ';',\n    '?',\n    '/',\n    '|',\n  ],\n};\n\nconst asPassword = function(\n  payload: string,\n  options: IPasswordOptions = {} as IPasswordOptions\n) {\n  const length = Math.max(4, Math.min(32, options.length || 12));\n  const digit = options.digit === false ? ([] as string[]) : CHARS.DIGIT;\n  const upper = options.upper === false ? ([] as string[]) : CHARS.UPPER;\n  const lower = options.lower === false ? ([] as string[]) : CHARS.LOWER;\n  const special = options.special === false ? ([] as string[]) : CHARS.SPECIAL;\n\n  let set = ([] as string[])\n    .concat(digit)\n    .concat(lower)\n    .concat(upper)\n    .concat(special);\n\n  // forces default characters (all) if no set is selected\n  if (set.length === 0) {\n    set = ([] as string[])\n      .concat(CHARS.DIGIT)\n      .concat(CHARS.UPPER)\n      .concat(CHARS.LOWER)\n      .concat(CHARS.SPECIAL);\n  }\n\n  const bytes = Bytes.fromString(payload);\n  const array: string[] = [];\n\n  bytes.forEach(function(byte, index) {\n    if (index < length) {\n      array.push(set[byte % set.length]);\n    }\n  });\n\n  return array.join('');\n};\n\nconst randomId = function() {\n  return asHex(randomBytes(16));\n};\n\nconst Public = {\n  digest,\n  hmac,\n  pbkdf2,\n  randomBytes,\n  asHex,\n  asBase64,\n  asPassword,\n  randomId,\n};\n\nexport default Public;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DefaultButton = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst DefaultInput = styled.input`\n  background-color: white;\n  border: none;\n  color: #4caf50;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst DefaultLabel = styled.label`\n  color: black;\n  font-family: 'Inconsolata', monospace;\n  display: inline-block;\n  padding: 0.75em;\n\n  display: block !important;\n`;\n\nconst Label = DefaultLabel;\n\nconst Button = styled(DefaultButton)`\n  border-radius: 0px 5px 5px 0px;\n  width: 25%;\n  display: block;\n`;\n\nconst Input = styled(DefaultInput)`\n  border-radius: 5px 0px 0px 5px;\n  width: 100%;\n  display: block;\n  margin: 0 auto;\n`;\n\nconst Div = styled.div`\n  width: 75%;\n  display: block;\n`;\n\ninterface IPassword {\n  visible: boolean;\n  value: string;\n  label: string;\n  labelId: string;\n  className: string;\n  customRef: React.RefObject<HTMLInputElement>;\n}\n\nconst Password: React.FC<IPassword> = initialPassword => {\n  const [currentPassword, setPassword] = React.useState({\n    visible: initialPassword.visible,\n    value: initialPassword.value,\n  });\n  const passwordInput = initialPassword.customRef;\n\n  const grabInputFocus = () => {\n    if (passwordInput.current !== null) {\n      passwordInput.current.focus();\n    }\n  };\n\n  const toggleVisibility = (event: any) => {\n    event.preventDefault();\n    setPassword({...currentPassword, visible: !currentPassword.visible});\n    grabInputFocus();\n  };\n\n  const updatePassword = (event: any) => {\n    setPassword({...currentPassword, value: event.target.value});\n  };\n\n  const hideImage = <i className=\"material-icons\">visibility_off</i>;\n  const showImage = <i className=\"material-icons\">visibility</i>;\n\n  const id = initialPassword.labelId;\n  const buttonText = currentPassword.visible ? hideImage : showImage;\n  const inputType = currentPassword.visible ? 'text' : 'password';\n  const placeholder = currentPassword.visible ? 'password' : '********';\n\n  React.useEffect(() => {\n    if (!currentPassword.visible) {\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      setPassword(currentPassword => {\n        return {...currentPassword, visible: false};\n      });\n    }, 1500);\n\n    return () => clearTimeout(timeout);\n  }, [currentPassword.visible]);\n\n  const allowEdit = () => {\n    if (passwordInput.current) {\n      passwordInput.current.readOnly = false;\n    }\n  };\n\n  const disallowEdit = () => {\n    if (passwordInput.current) {\n      passwordInput.current.readOnly = true;\n    }\n  };\n\n  return (\n    <div className={initialPassword.className}>\n      <Label htmlFor={id}>{initialPassword.label}</Label>\n      <div className={'horizontal-stack'}>\n        <Div className={'horizontal-stack'}>\n          <Input\n            id={id}\n            type={inputType}\n            value={currentPassword.value}\n            ref={passwordInput}\n            onMouseEnter={undefined}\n            onChange={updatePassword}\n            placeholder={placeholder}\n            autoComplete={'off'}\n            readOnly\n            onFocus={allowEdit}\n            onBlur={disallowEdit}\n          />\n        </Div>\n        <Button onClick={toggleVisibility}>{buttonText}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Password;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DefaultInput = styled.input`\n  background-color: white;\n  border: none;\n  color: #4caf50;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst DefaultLabel = styled.label`\n  color: black;\n  font-family: 'Inconsolata', monospace;\n  display: inline-block;\n  padding: 0.75em;\n\n  display: block !important;\n`;\n\nconst Label = DefaultLabel;\n\nconst Input = styled(DefaultInput)`\n  border-radius: 5px 0px 0px 5px;\n  width: 100%;\n  display: block;\n`;\n\nconst DefaultButton = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst Button = styled(DefaultButton)`\n  border-radius: 0px 5px 5px 0px;\n  width: 25%;\n  display: block;\n`;\n\nconst Div = styled.div`\n  width: 75%;\n  display: block;\n`;\n\nconst exists = (value: any) => {\n  return value !== null && value !== undefined && value !== '' && value !== 0;\n};\n\ninterface ITextInput {\n  value: string;\n  placeholder: string;\n  label: string;\n  labelId: string;\n  className: string;\n  customRef: React.RefObject<HTMLInputElement>;\n}\n\nconst TextInput: React.FC<ITextInput> = props => {\n  const [state, setState] = React.useState({\n    value: props.value,\n    clean: false,\n  });\n\n  /*\n  const grabInputFocus = () => {\n    if (props.customRef.current !== null) {\n      props.customRef.current.focus();\n    }\n  };\n  */\n  const clearSelection = (event: any) => {\n    event.preventDefault();\n\n    if (props.customRef.current && exists(props.customRef.current.value)) {\n      props.customRef.current.value = '';\n      setState({clean: true, value: ''});\n    }\n  };\n\n  const updateText = () => {\n    if (props.customRef.current && exists(props.customRef.current.value)) {\n      const value = props.customRef.current.value;\n      setState({...state, value});\n    }\n  };\n\n  const noValue = () => {\n    return !state.value;\n  };\n\n  const allowEdit = () => {\n    if (props.customRef.current) {\n      props.customRef.current.readOnly = false;\n    }\n  };\n\n  const disallowEdit = () => {\n    if (props.customRef.current) {\n      props.customRef.current.readOnly = true;\n    }\n  };\n\n  return (\n    <div className={props.className}>\n      <Label htmlFor={props.labelId}>{props.label}</Label>\n      <div className=\"horizontal-stack\">\n        <Div className=\"horizontal-stack\">\n          <Input\n            id={props.labelId}\n            type=\"text\"\n            placeholder={props.placeholder}\n            onChange={updateText}\n            ref={props.customRef}\n            autoComplete={'off'}\n            readOnly\n            onFocus={allowEdit}\n            onBlur={disallowEdit}\n            value={state.value}\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n          />\n        </Div>\n        <Button type=\"button\" disabled={noValue()} onClick={clearSelection}>\n          <i className=\"material-icons\">clear</i>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DefaultLabel = styled.label`\n  color: black;\n  font-family: 'Inconsolata', monospace;\n  display: inline-block;\n  padding: 0.75em;\n\n  display: block !important;\n`;\n\nconst DefaultInput = styled.input`\n  background-color: white;\n  border: none;\n  color: #4caf50;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px 0px 0px 5px;\n`;\n\nconst Label = DefaultLabel;\n\nconst Input = styled(DefaultInput)`\n  margin: 0 auto;\n  display: block;\n  width: 100%;\n`;\n\ninterface IOptions {\n  label: string;\n  values: Array<string>;\n  optionsId: string;\n  className: string;\n  customRef: React.RefObject<HTMLInputElement>;\n}\n\nconst DefaultButton = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst Button = styled(DefaultButton)`\n  border-radius: 0px 5px 5px 0px;\n  width: 25%;\n  display: block;\n`;\n\nconst Div = styled.div`\n  width: 75%;\n  display: block;\n`;\n\nconst asKey = (value: string) => value.toLowerCase().replace(/\\s/g, '-');\nconst asOption = (value: string) => (\n  <option value={value} key={asKey(value)}>\n    {value}\n  </option>\n);\n\nconst exists = (value: any) => {\n  return value !== null && value !== undefined && value !== '' && value !== 0;\n};\n\nconst Options: React.FC<IOptions> = ({\n  values,\n  label,\n  optionsId,\n  customRef,\n  className,\n}) => {\n  const labelId = `${optionsId}-label`;\n  const listId = `${optionsId}-list`;\n\n  const [current, update] = React.useState({clean: false, value: ''});\n\n  const clearSelection = (event: any) => {\n    event.preventDefault();\n\n    if (customRef.current && exists(customRef.current.value)) {\n      customRef.current.value = '';\n      update({clean: true, value: ''});\n    }\n  };\n\n  const trackChanges = () => {\n    if (customRef.current && exists(customRef.current.value)) {\n      const value = customRef.current.value;\n      update({...current, value});\n    }\n  };\n\n  const noValue = () => {\n    return !current.value;\n  };\n\n  return (\n    <div className={className}>\n      <Label htmlFor={labelId}>{label}</Label>\n      <div className={'horizontal-stack'}>\n        <Div className=\"horizontal-stack\">\n          <Input\n            list={listId}\n            id={labelId}\n            ref={customRef}\n            onChange={trackChanges}\n            value={current.value}\n          />\n          <datalist id={listId}>{values.map(asOption)}</datalist>\n        </Div>\n        <Button type=\"button\" disabled={noValue()} onClick={clearSelection}>\n          <i className=\"material-icons\">clear</i>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst PublicOptions = styled(Options)``;\n\nexport default PublicOptions;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst DefaultButton = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst DefaultOutput = styled.input`\n  background-color: white;\n  border: none;\n  color: #4caf50;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst DefaultLabel = styled.label`\n  color: black;\n  font-family: 'Inconsolata', monospace;\n  display: inline-block;\n  padding: 0.75em;\n\n  display: block !important;\n`;\n\nconst Label = DefaultLabel;\n\nconst Button = styled(DefaultButton)`\n  border-radius: 0px 5px 5px 0px;\n  width: 25%;\n  display: block;\n`;\n\nconst StyledOutput = styled(DefaultOutput)`\n  border-radius: 5px 0px 0px 5px;\n  width: 75%;\n  display: block;\n`;\n\ninterface IOutput {\n  value: string;\n  className: string;\n  label: string;\n  labelId: string;\n}\n\nconst Output: React.FC<IOutput> = ({value, className, label, labelId}) => {\n  const copyContent = (event: any) => {\n    event.preventDefault();\n\n    return navigator.clipboard.writeText(value);\n  };\n\n  const disabled = !value;\n\n  return (\n    <div className={`${className}`}>\n      <Label htmlFor={labelId}>{label}</Label>\n      <div className={'horizontal-stack'}>\n        <StyledOutput id={labelId} readOnly disabled={disabled} value={value} />\n        <Button type=\"button\" disabled={disabled} onClick={copyContent}>\n          <i className=\"material-icons\">file_copy</i>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nconst PublicOutput = styled(Output)``;\n\nexport default React.memo(PublicOutput);\n","import React from 'react';\nimport styled from 'styled-components';\nimport swal from '@sweetalert/with-react';\n\nimport Output from '../../components/Output';\n\nconst DefaultButton = styled.button`\n  border: none;\n  color: white;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst Button = styled(DefaultButton)`\n  background-color: #4caf50;\n  margin: 5px;\n  margin-left: 0px;\n  margin-right: 5px;\n`;\n\nconst CloseButton = styled(Button)`\n  background-color: #af4c50;\n`;\n\nconst Div = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  text-align: left;\n`;\n\ninterface IPasswordOutput {\n  password: string;\n  outputId: string;\n  refreshPassword: (event: any) => void;\n}\n\nconst PasswordOutput: React.FC<IPasswordOutput> = props => {\n  return (\n    <Div>\n      <Output\n        value={props.password}\n        labelId={props.outputId}\n        label={'Output Password'}\n        className={'form-component password-output'}\n      />\n      <br />\n      <Button\n        onClick={props.refreshPassword}\n        type=\"button\"\n        disabled={!props.password}\n        className={'form-component'}>\n        REFRESH <i className=\"material-icons\">refresh</i>\n      </Button>\n      <br />\n      <CloseButton\n        onClick={() => swal.close()}\n        type=\"button\"\n        className={'form-component'}>\n        CLOSE <i className=\"material-icons\">close</i>\n      </CloseButton>\n    </Div>\n  );\n};\n\nexport default PasswordOutput;\n","import React from 'react';\nimport styled from 'styled-components';\nimport swal from '@sweetalert/with-react';\n\nimport Crypto from '../../crypto';\nimport Blacklist from '../../utils/blacklist';\nimport Storage from '../../utils/storage';\nimport Password from '../../components/Password';\nimport TextInput from '../../components/TextInput';\nimport Options from '../../components/Options';\nimport PasswordOutputModal from '../../modals/PasswordOutput';\n\nconst DefaultButton = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 12px 24px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 5px;\n`;\n\nconst Button = styled(DefaultButton)`\n  margin: 5px;\n  margin-left: 0px;\n  margin-right: 5px;\n`;\n\nconst servicesList = [\n  'Twitter',\n  'Facebook',\n  'GitHub',\n  'GitLab',\n  'Bitbucket',\n  'GMail',\n];\n\nconst Form = styled.form`\n  padding-top: 25px;\n  margin: 0 auto;\n  display: block;\n\n  width: 80%;\n`;\n\nconst MainPage: React.FC = () => {\n  const usernameId = 'master-username-id';\n  const passwordId = 'master-password-id';\n  const optionsId = 'external-services-id';\n  const outputId = 'generated-password-id';\n\n  const [current, update] = React.useState({\n    username: '',\n    password: '',\n    hashImage: '',\n    derivedKey: '',\n    saltAndData: '',\n    nonce: 0,\n  });\n\n  const masterPasswordRef = React.useRef<HTMLInputElement>(null);\n  const masterUsernameRef = React.useRef<HTMLInputElement>(null);\n  const serviceRef = React.useRef<HTMLInputElement>(null);\n\n  const computePass = (hashImage: string) => {\n    return Crypto.asPassword(hashImage, {\n      length: 12,\n      digit: !Storage.get('settings-no-digit-char'),\n      upper: !Storage.get('settings-no-upper-char'),\n      lower: true,\n      special: !Storage.get('settings-no-special-char'),\n    });\n  };\n\n  const computePairs = async (data: string, salt: string, initialNonce = 0) => {\n    const derivedKey = await Crypto.pbkdf2(data, salt);\n    const blacklist = Blacklist.get();\n\n    let nonce = initialNonce;\n    console.log('Trying the HMAC nonce: ' + nonce);\n    let hashImage = await Crypto.hmac('SHA-512', nonce.toString(), derivedKey);\n    let hexHashImage = Crypto.asHex(hashImage);\n\n    while (blacklist[hexHashImage]) {\n      nonce += 1;\n      console.log('Trying the HMAC nonce: ' + nonce);\n      hashImage = await Crypto.hmac('SHA-512', nonce.toString(), derivedKey);\n      hexHashImage = Crypto.asHex(hashImage);\n    }\n\n    const newPassword = computePass(hashImage);\n\n    return {hashImage, newPassword, nonce, derivedKey};\n  };\n\n  const refreshPassword = async function(event: any) {\n    event.preventDefault();\n\n    if (current.hashImage && current.derivedKey) {\n      const nonce = current.nonce + 1;\n      const hexHashImage = Crypto.asHex(current.hashImage);\n      console.log('Refreshing the new HMAC nonce: ' + nonce);\n      const hashImage = await Crypto.hmac(\n        'SHA-512',\n        nonce.toString(),\n        current.derivedKey\n      );\n      const newPassword = computePass(hashImage);\n\n      Blacklist.add(hexHashImage);\n\n      update({...current, hashImage, password: newPassword, nonce});\n    }\n  };\n\n  const generatePassword = async function(event: any) {\n    event.preventDefault();\n\n    const user =\n      masterUsernameRef.current !== null ? masterUsernameRef.current.value : '';\n    const pass =\n      masterPasswordRef.current !== null ? masterPasswordRef.current.value : '';\n    const service = serviceRef.current !== null ? serviceRef.current.value : '';\n\n    if (user === '' || pass === '' || service === '') {\n      alert('You must fill the username, master password and service fields!');\n      return;\n    }\n\n    const salt = service;\n    const data = user + '\\n' + pass;\n\n    // no changes from form inputs since last operation?\n    const saltAndData = [service, user, pass].join('\\n');\n    const initialNonce =\n      current.saltAndData === saltAndData ? current.nonce : undefined;\n\n    const {newPassword, hashImage, nonce, derivedKey} = await computePairs(\n      data,\n      salt,\n      initialNonce\n    );\n\n    update({\n      ...current,\n      hashImage,\n      password: newPassword,\n      nonce,\n      derivedKey,\n      saltAndData,\n    });\n  };\n\n  React.useEffect(() => {\n    if (current.password) {\n      swal({\n        content: (\n          <PasswordOutputModal\n            password={current.password}\n            refreshPassword={refreshPassword}\n            outputId={outputId}\n          />\n        ),\n        buttons: false,\n      });\n    }\n    return () => {\n      if (current.password) {\n        swal.close();\n      }\n    };\n  });\n\n  return (\n    <Form className={'form-container'}>\n      <div>\n        <TextInput\n          customRef={masterUsernameRef}\n          labelId={usernameId}\n          value={''}\n          label={'Master Username'}\n          className={'form-component'}\n          placeholder={'username'}\n        />\n        <br />\n        <Password\n          customRef={masterPasswordRef}\n          labelId={passwordId}\n          visible={false}\n          value={''}\n          label={'Master Password'}\n          className={'form-component'}\n        />\n        <br />\n        <Options\n          customRef={serviceRef}\n          optionsId={optionsId}\n          values={servicesList}\n          label={'External Service'}\n          className={'form-component'}\n        />\n        <br />\n        <Button\n          onClick={generatePassword}\n          type=\"button\"\n          className={'form-component'}>\n          GENERATE <i className=\"material-icons\">vpn_key</i>\n        </Button>\n        <br />\n        <br />\n      </div>\n    </Form>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}